# Copyright (c) 2020-2022 Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

- name: get OS specific variables
  ansible.builtin.include_vars:
    file: "{{ _item }}"
  with_first_found:
  - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  - default.yml
  loop_control:
    loop_var: _item

- block:

  - name: create directory for repo "{{ restic_repo }}"
    file:
      path: /etc/restic.repos.d/{{ restic_repo }}
      state: directory
      mode: 0755

  - name: create environment file for repo "{{ restic_repo }}"
    template:
      src: "{{ t.src }}"
      dest: "{{ t.dest }}"
      backup: true
      mode: 0644
    loop:
      - src: env.j2
        dest: /etc/restic.repos.d/{{ restic_repo }}/env
    loop_control:
      loop_var: t

  - name: systemd units for forget are present
    block:

      - name: systemd units are present (forget)
        template:
          src: "{{ unit }}.j2"
          dest: /etc/systemd/system/restic.{{ restic_repo }}-{{ unit }}
          mode: '0644'
        loop:
          - forget.service
          - forget.timer
        loop_control:
          loop_var: unit
        notify:
          - restart forget.timer
        register: _reg_restic_repo_systemd_units

      - name: systemd daemon-reload
        systemd:
          daemon-reload: true
        when: _reg_restic_repo_systemd_units.results|selectattr('changed')|list

      - name: forget timer is started
        systemd:
          name: restic.{{ restic_repo }}-forget.timer
          state: started
          enabled: true
        when:
          - restic_forget is defined
          - restic_forget.schedule.oncalendar != 'never'

      - name: forget timer is stopped
        systemd:
          name: restic.{{ restic_repo }}-forget.timer
          state: stopped
          enabled: false
        when: (restic_forget.schedule.oncalendar|default('never') == 'never')

      - name: systemd units are present (prune)
        template:
          src: "{{ unit }}.j2"
          dest: /etc/systemd/system/restic.{{ restic_repo }}-{{ unit }}
          mode: '0644'
        loop:
          - prune.service
          - prune.timer
        loop_control:
          loop_var: unit
        notify:
          - systemd daemon-reload
          - restart prune.timer

      - name: prune timer is started
        systemd:
          name: restic.{{ restic_repo }}-prune.timer
          state: started
          enabled: true
        when:
          - restic_prune is defined
          - restic_prune.schedule.oncalendar != 'never'

      - name: prune timer is stopped
        systemd:
          name: restic.{{ restic_repo }}-prune.timer
          state: stopped
          enabled: false
        when: (restic_prune.schedule.oncalendar|default('never') == 'never')

      - name: systemd units are present (check)
        template:
          src: "{{ unit }}.j2"
          dest: /etc/systemd/system/restic.{{ restic_repo }}-{{ unit }}
          mode: '0644'
        loop:
          - check.service
          - check.timer
        loop_control:
          loop_var: unit
        notify:
          - systemd daemon-reload
          - restart check.timer

      - name: check timer are started
        systemd:
          name: restic.{{ restic_repo }}-check.timer
          state: started
          enabled: true
        when:
          - restic_check is defined
          - restic_check.schedule.oncalendar != 'never'

      - name: check timer are stopped
        systemd:
          name: restic.{{ restic_repo }}-check.timer
          state: stopped
          enabled: false
        when: (restic_check.schedule.oncalendar|default('never') == 'never')
    when:
      - restic_has_keep_within|default(true)

  - name: cachedir is present
    file:
      path: "{{ cachedir|default(restic_default_cachedir) }}"
      state: directory
      mode: 00700
      owner: root

  - name: write password file for repo "{{ restic_repo }}"
    copy:
      content: "{{ restic_password }}"
      dest: /etc/restic.repos.d/{{ restic_repo }}/password
      backup: true
      mode: 0440
      force: false
    when: restic_password is defined

  - name: create a new password for repo "{{ restic_repo }}"
    copy:
      content: "{{ lookup('password', '/dev/null') }}"
      dest: /etc/restic.repos.d/{{ restic_repo }}/password
      group: "{{ restic_repo_local_group|default(omit) }}"
      backup: true
      force: false
      mode: '440'

  # mode and ownership maybe wrong
  - name: create a new password for repo "{{ restic_repo }}"
    file:
      dest: /etc/restic.repos.d/{{ restic_repo }}/password
      group: "{{ restic_repo_local_group|default(omit) }}"
      mode: '440'

  - name: wrapper script is present for repo "{{ restic_repo }}"
    template:
      src: wrapper.sh.j2
      dest: /usr/local/bin/restic.{{ restic_repo }}
      backup: true
      mode: 0755
      validate: bash -n %s

  when: restic_repo_state == 'present'

- block:

  - name: absent
    file:
      path: "{{ _item }}"
      state: absent
    loop:
    - /usr/local/bin/restic.{{ restic_repo }}
    - /etc/restic.repos.d/{{ restic_repo }}
    loop_control:
      loop_var: _item

  when: restic_repo_state == 'absent'

...
